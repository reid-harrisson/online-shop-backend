definitions:
  requests.RequestAttribute:
    properties:
      name:
        example: length
        type: string
      unit:
        example: cm
        type: string
    type: object
  requests.RequestCart:
    properties:
      attribute_value_ids:
        example:
        - 1
        - 2
        - 3
        items:
          type: integer
        type: array
    type: object
  requests.RequestCategory:
    properties:
      name:
        example: pear
        type: string
      parent_id:
        example: 2
        type: integer
    type: object
  requests.RequestCustomerAddress:
    properties:
      address_line1:
        example: Mozart
        type: string
      address_line2:
        example: Arizona
        type: string
      city_id:
        example: 2744603
        type: integer
      country_id:
        example: 226
        type: integer
      postal_code:
        example: "2000"
        type: string
      region_id:
        example: 3858
        type: integer
      suburb:
        example: Honeydew
        type: string
    type: object
  requests.RequestEmailTemplate:
    properties:
      body_cta_btn_label:
        example: Body Cta Btn Label
        type: string
      body_cta_btn_link:
        example: Body Cta Btn Link
        type: string
      body_greeting:
        example: Body Greeting
        type: string
      body_message:
        example: Body Message
        type: string
      body_secondary_message:
        example: Body Secondary Message
        type: string
      company_link:
        example: Company Link
        type: string
      company_logo_url:
        example: Company Logo Url
        type: string
      company_name:
        example: Company Name
        type: string
      company_primary_color:
        example: Company Primary Color
        type: string
      email_pretext:
        example: Email Pretext
        type: string
      first_name:
        example: First Name
        type: string
      header_poster_slogan_subtitle:
        example: Header Poster Slogan Subtitle
        type: string
      header_poster_slogan_title:
        example: Header Poster Slogan Title
        type: string
      order_status:
        example: 3
        type: integer
      store_id:
        example: 1
        type: integer
      unsubscribe_link:
        example: Unsubscribe Link
        type: string
      unsubscribe_safe_link:
        example: Unsubscribe Safe Link
        type: string
    type: object
  requests.RequestMinimumStockLevel:
    properties:
      level:
        example: 57
        type: number
    type: object
  requests.RequestProduct:
    properties:
      image_urls:
        example:
        - https://www.pockittv.com/images/companies/63/products/bg_645a225496947_stirrup-cover-red-brass.webp
        - https://www.pockittv.com/images/companies/63/products/bg_645a339f5bef2_tall-black.webp
        items:
          type: string
        type: array
      long_description:
        example: Delicious Apple
        type: string
      name:
        example: Honeycrisp
        type: string
      short_description:
        example: Apple
        type: string
      store_id:
        example: 1
        type: integer
    type: object
  requests.RequestProductCategory:
    properties:
      category_ids:
        example:
        - 1
        - 2
        - 3
        items:
          type: integer
        type: array
    type: object
  requests.RequestProductChannel:
    properties:
      channels:
        example:
        - 173
        - 174
        - 175
        items:
          type: integer
        type: array
    type: object
  requests.RequestProductContent:
    properties:
      contents:
        example:
        - 271
        - 272
        - 273
        items:
          type: integer
        type: array
    type: object
  requests.RequestProductReview:
    properties:
      comment:
        example: This is sample comment.
        type: string
      rate:
        example: 4.3
        type: number
    type: object
  requests.RequestProductVariation:
    properties:
      attribute_value_ids:
        example:
        - 1
        - 2
        - 3
        items:
          type: integer
        type: array
      discount_amount:
        example: 10
        type: number
      discount_type:
        allOf:
        - $ref: '#/definitions/utils.DiscountTypes'
        example: 1
      free_shipping:
        example: 20
        type: number
      price:
        example: 1.23
        type: number
      stock_level:
        example: 30
        type: number
    type: object
  requests.RequestProductWithDetail:
    properties:
      attributes:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      categories:
        example:
        - 7
        - 9
        - 11
        items:
          type: integer
        type: array
      channels:
        example:
        - 173
        - 174
        - 175
        items:
          type: integer
        type: array
      contents:
        example:
        - 222
        - 223
        - 224
        items:
          type: integer
        type: array
      cross_sell:
        example:
        - 3
        - 6
        - 8
        items:
          type: integer
        type: array
      image_urls:
        example:
        - https://www.pockittv.com/images/companies/63/products/bg_645a225496947_stirrup-cover-red-brass.webp
        - https://www.pockittv.com/images/companies/63/products/bg_645a339f5bef2_tall-black.webp
        items:
          type: string
        type: array
      long_description:
        example: Delicious Apple
        type: string
      name:
        example: Honeycrisp
        type: string
      short_description:
        example: Apple
        type: string
      store_id:
        example: 1
        type: integer
      tags:
        example:
        - fruit
        - food
        items:
          type: string
        type: array
      up_sell:
        example:
        - 2
        - 5
        - 7
        items:
          type: integer
        type: array
    type: object
  requests.RequestShippingData:
    properties:
      classification:
        example: food
        type: string
      height:
        example: 118
        type: number
      length:
        example: 8
        type: number
      weight:
        example: 1.35
        type: number
      width:
        example: 58
        type: number
    type: object
  requests.RequestShippingOption:
    properties:
      method:
        example: flat rate
        type: string
    type: object
  requests.RequestStore:
    properties:
      back_order_status:
        allOf:
        - $ref: '#/definitions/utils.SimpleStatuses'
        example: 0
      company_id:
        example: 2
        type: integer
      contact_email:
        example: example@sample.com
        type: string
      contact_phone:
        example: "7184756027"
        type: string
      delivery_policy:
        example: example delivery policy
        type: string
      owner_id:
        example: 1427
        type: integer
      returns_policy:
        example: example return policy
        type: string
      show_out_of_stock_status:
        allOf:
        - $ref: '#/definitions/utils.SimpleStatuses'
        example: 0
      show_stock_level_status:
        allOf:
        - $ref: '#/definitions/utils.SimpleStatuses'
        example: 0
      terms:
        example: example terms
        type: string
    type: object
  requests.RequestTag:
    properties:
      tags:
        example:
        - apple
        - fruit
        - food
        items:
          type: string
        type: array
    type: object
  requests.RequestVisitor:
    properties:
      bounce:
        example: 1
        type: integer
      ip_address:
        example: 11.111.11.111
        type: string
      loading_time:
        example: 0.2
        type: number
      page:
        example: Store
        type: string
      product_id:
        example: 31
        type: integer
      store_id:
        example: 1
        type: integer
    type: object
  responses.Data:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  responses.Error:
    properties:
      code:
        type: integer
      error:
        type: string
    type: object
  responses.ResponseAttributeValueItem:
    properties:
      id:
        type: integer
      value:
        type: string
    type: object
  responses.ResponseCart:
    properties:
      stores:
        items:
          $ref: '#/definitions/responses.ResponseStoreCart'
        type: array
      total_price:
        type: number
    type: object
  responses.ResponseCartItem:
    properties:
      category:
        type: string
      discount_amount:
        type: number
      discount_type:
        $ref: '#/definitions/utils.DiscountTypes'
      exchange_price:
        type: number
      exchange_rate:
        type: number
      id:
        type: integer
      image_url:
        type: string
      price:
        type: number
      product_id:
        type: integer
      product_name:
        type: string
      quantity:
        type: number
      total_price:
        type: number
    type: object
  responses.ResponseCategory:
    properties:
      category_id:
        type: integer
      category_name:
        type: string
      id:
        type: integer
      product_id:
        type: integer
    type: object
  responses.ResponseCategorySales:
    properties:
      category:
        type: string
      quantity:
        type: number
      revenue:
        type: number
    type: object
  responses.ResponseCheckoutFunnelAnalytic:
    properties:
      step:
        type: string
      visitors:
        type: integer
    type: object
  responses.ResponseConventionRate:
    properties:
      rate:
        type: number
    type: object
  responses.ResponseCustomerAddress:
    properties:
      address_line1:
        type: string
      address_line2:
        type: string
      city_id:
        type: integer
      country_id:
        type: integer
      id:
        type: integer
      postal_code:
        type: string
      region_id:
        type: integer
      suburb:
        type: string
    type: object
  responses.ResponseCustomerDataByLocation:
    properties:
      customers:
        type: integer
      location:
        type: string
    type: object
  responses.ResponseCustomerInsight:
    properties:
      average_age:
        type: number
      female_count:
        type: integer
      male_count:
        type: integer
      oldest_age:
        type: integer
      youngest_age:
        type: integer
    type: object
  responses.ResponseCustomerOrderItem:
    properties:
      price:
        type: number
      product_id:
        type: integer
      product_status:
        type: string
      quantity:
        type: number
      shipping_method_id:
        type: integer
      shipping_price:
        type: number
      store_id:
        type: integer
      sub_total_price:
        type: number
      tax_amount:
        type: number
      tax_rate:
        type: number
      total_price:
        type: number
    type: object
  responses.ResponseCustomerOrderWithDetail:
    properties:
      billing_address:
        $ref: '#/definitions/responses.ResponseCustomerAddress'
      items:
        items:
          $ref: '#/definitions/responses.ResponseCustomerOrderItem'
        type: array
      order_status:
        type: string
      shipping_address:
        $ref: '#/definitions/responses.ResponseCustomerAddress'
    type: object
  responses.ResponseCustomerSales:
    properties:
      customer:
        type: integer
      quantity:
        type: number
      revenue:
        type: number
    type: object
  responses.ResponseCustomerSatisfaction:
    properties:
      average_rating:
        type: number
      nps:
        type: number
    type: object
  responses.ResponseEmailTemplate:
    properties:
      body_cta_btn_label:
        type: string
      body_cta_btn_link:
        type: string
      body_greeting:
        type: string
      body_message:
        type: string
      body_secondary_message:
        type: string
      company_link:
        type: string
      company_logo_url:
        type: string
      company_name:
        type: string
      company_primary_color:
        type: string
      email_pretext:
        type: string
      first_name:
        type: string
      header_poster_slogan_subtitle:
        type: string
      header_poster_slogan_title:
        type: string
      id:
        type: integer
      order_status:
        type: integer
      store_id:
        type: integer
      unsubscribe_link:
        type: string
      unsubscribe_safe_link:
        type: string
    type: object
  responses.ResponseFullFunnelAnalytic:
    properties:
      step:
        type: string
      visitors:
        type: integer
    type: object
  responses.ResponseLinkedProducts:
    properties:
      cross_sell:
        items:
          $ref: '#/definitions/responses.ResponseProduct'
        type: array
      up_sell:
        items:
          $ref: '#/definitions/responses.ResponseProduct'
        type: array
    type: object
  responses.ResponseOrderTrendAnalytic:
    properties:
      count:
        type: integer
      date:
        type: string
      sales:
        type: number
    type: object
  responses.ResponsePageLoadingTime:
    properties:
      average_time:
        type: number
      maximum_time:
        type: number
      minimum_time:
        type: number
      page:
        type: string
    type: object
  responses.ResponseProduct:
    properties:
      currency_id:
        type: integer
      id:
        type: integer
      image_urls:
        items:
          type: string
        type: array
      long_description:
        type: string
      short_description:
        type: string
      status:
        type: string
      store_id:
        type: integer
      title:
        type: string
    type: object
  responses.ResponseProductAttribute:
    properties:
      id:
        type: integer
      name:
        type: string
      product_id:
        type: integer
      unit:
        type: string
    type: object
  responses.ResponseProductAttributeValue:
    properties:
      attribute_id:
        type: integer
      attribute_name:
        type: string
      product_id:
        type: integer
      values:
        items:
          type: string
        type: array
    type: object
  responses.ResponseProductChannel:
    properties:
      channel_id:
        type: integer
      channel_name:
        type: string
      id:
        type: integer
      product_id:
        type: integer
    type: object
  responses.ResponseProductContent:
    properties:
      content_id:
        type: integer
      content_title:
        type: string
      id:
        type: integer
      product_id:
        type: integer
    type: object
  responses.ResponseProductReview:
    properties:
      comment:
        type: string
      customer_id:
        type: integer
      id:
        type: integer
      product_id:
        type: integer
      status:
        type: string
    type: object
  responses.ResponseProductSales:
    properties:
      product_id:
        type: integer
      quantity:
        type: number
      revenue:
        type: number
    type: object
  responses.ResponseProductVariation:
    properties:
      discount_amount:
        type: number
      discount_type:
        type: string
      id:
        type: integer
      price:
        type: number
      product_id:
        type: integer
      sku:
        type: string
      stock_level:
        type: number
    type: object
  responses.ResponseProductVariationWithAttribute:
    properties:
      attribute_name:
        type: string
      attribute_value:
        type: string
      attribute_value_id:
        type: integer
    type: object
  responses.ResponseProductVariationsInProduct:
    properties:
      attributes:
        items:
          $ref: '#/definitions/responses.ResponseProductVariationWithAttribute'
        type: array
      discount_amount:
        type: number
      discount_type:
        type: string
      id:
        type: integer
      price:
        type: number
      product_id:
        type: integer
      sku:
        type: string
      stock_level:
        type: number
    type: object
  responses.ResponseProductVariationsInStore:
    properties:
      minimum_stock_level:
        type: number
      product_id:
        type: integer
      stock_level:
        type: number
      title:
        type: string
      variations:
        items:
          $ref: '#/definitions/responses.ResponseProductVariation'
        type: array
    type: object
  responses.ResponseProductViewAnalytic:
    properties:
      page_views:
        type: integer
      product_id:
        type: integer
      product_name:
        type: string
      purchase:
        type: integer
    type: object
  responses.ResponseProductWithDetail:
    properties:
      attributes:
        items:
          type: string
        type: array
      categories:
        items:
          type: string
        type: array
      currency_id:
        type: integer
      id:
        type: integer
      image_urls:
        items:
          type: string
        type: array
      long_description:
        type: string
      related_channels:
        items:
          type: integer
        type: array
      related_contents:
        items:
          type: integer
        type: array
      shipping_data:
        $ref: '#/definitions/responses.ResponseShippingData'
      short_description:
        type: string
      status:
        type: string
      store_id:
        type: integer
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      variations:
        additionalProperties:
          items:
            $ref: '#/definitions/responses.ResponseAttributeValueItem'
          type: array
        type: object
    type: object
  responses.ResponseProductsPaging:
    properties:
      data:
        items:
          $ref: '#/definitions/responses.ResponseProduct'
        type: array
      total_count:
        type: integer
    type: object
  responses.ResponseRepeatCustomerRate:
    properties:
      rate:
        type: number
    type: object
  responses.ResponseSalesAOV:
    properties:
      aov:
        type: number
      store_id:
        type: integer
    type: object
  responses.ResponseSalesByCategory:
    properties:
      categories:
        items:
          $ref: '#/definitions/responses.ResponseCategorySales'
        type: array
      store_id:
        type: integer
    type: object
  responses.ResponseSalesByProduct:
    properties:
      products:
        items:
          $ref: '#/definitions/responses.ResponseProductSales'
        type: array
      store_id:
        type: integer
    type: object
  responses.ResponseSalesCLV:
    properties:
      clv:
        items:
          $ref: '#/definitions/responses.ResponseCustomerSales'
        type: array
      store_id:
        type: integer
    type: object
  responses.ResponseSalesReport:
    properties:
      price:
        type: number
      product_id:
        type: integer
      quantity:
        type: number
      store_id:
        type: integer
      total_price:
        type: number
      variation_id:
        type: integer
    type: object
  responses.ResponseSalesRevenue:
    properties:
      revenue:
        type: number
      store_id:
        type: integer
    type: object
  responses.ResponseShippingData:
    properties:
      height:
        type: number
      id:
        type: integer
      length:
        type: number
      weight:
        type: number
      width:
        type: number
    type: object
  responses.ResponseShippingMethod:
    properties:
      method:
        type: string
    type: object
  responses.ResponseShoppingCartAbandonment:
    properties:
      rate:
        type: number
    type: object
  responses.ResponseStockLevelAnalytic:
    properties:
      availability:
        type: string
      product_id:
        type: integer
      stock_level:
        type: number
    type: object
  responses.ResponseStore:
    properties:
      back_order_status:
        type: string
      company_id:
        type: integer
      contact_email:
        type: string
      contact_phone:
        type: string
      delivery_policy:
        type: string
      id:
        type: integer
      owner_id:
        type: integer
      returns_policy:
        type: string
      show_out_of_stock_status:
        type: string
      show_stock_level_status:
        type: string
      terms:
        type: string
    type: object
  responses.ResponseStoreCart:
    properties:
      items:
        items:
          $ref: '#/definitions/responses.ResponseCartItem'
        type: array
      store_total:
        type: number
    type: object
  responses.ResponseStoreCategory:
    properties:
      children_ids:
        items:
          type: integer
        type: array
      id:
        type: integer
      name:
        type: string
      parent_id:
        type: integer
      store_id:
        type: integer
    type: object
  responses.ResponseStoreOrder:
    properties:
      billing_address:
        type: integer
      customer_id:
        type: integer
      order_id:
        type: integer
      price:
        type: number
      product_status:
        type: string
      quantity:
        type: number
      shipping_address:
        type: integer
      shipping_method_id:
        type: integer
      shipping_price:
        type: number
      sub_total_price:
        type: number
      tax_amount:
        type: number
      tax_rate:
        type: number
      total_price:
        type: number
      variation_id:
        type: integer
    type: object
  responses.ResponseTag:
    properties:
      tags:
        items:
          type: string
        type: array
    type: object
  responses.ResponseTaxSetting:
    properties:
      country_id:
        type: integer
      customer_id:
        type: integer
      tax_rate:
        type: number
    type: object
  responses.ResponseTopSellingProduct:
    properties:
      product_id:
        type: integer
      product_name:
        type: string
      sales:
        type: number
    type: object
  responses.ResponseVisitor:
    properties:
      bounce:
        type: integer
      id:
        type: integer
      ip_address:
        type: string
      lodaing_time:
        type: number
      page:
        type: string
      product_id:
        type: integer
      store_id:
        type: integer
    type: object
  responses.ResponseVisitorAnalytic:
    properties:
      bounce_rate:
        type: number
      page_views:
        type: integer
      unique_visitors:
        type: integer
      visitors:
        type: integer
    type: object
  utils.DiscountTypes:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - PercentageOff
    - FixedAmountOff
  utils.SimpleStatuses:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - Disabled
    - Enabled
info:
  contact: {}
  title: PockitTV Online Store
  version: "1.0"
paths:
  /store/api/v1/analytic/abandonment:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseShoppingCartAbandonment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Analyse shopping cart abandonment by store
      tags:
      - Analytics
  /store/api/v1/analytic/checkout-funnel:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseCheckoutFunnelAnalytic'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Analyse checkout funnel by store
      tags:
      - Analytics
  /store/api/v1/analytic/churn-rate:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      - description: Start Date
        in: query
        name: start_date
        required: true
        type: string
      - description: End Date
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseVisitorAnalytic'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Analyse customer churn rate by store
      tags:
      - Analytics
  /store/api/v1/analytic/convention-rate:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseConventionRate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Analyse convention rate by store
      tags:
      - Analytics
  /store/api/v1/analytic/customer-insight:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      - description: Start Date
        in: query
        name: start_date
        required: true
        type: string
      - description: End Date
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseCustomerInsight'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Analyse customer insights by store
      tags:
      - Analytics
  /store/api/v1/analytic/customer-location:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      - description: Start Date
        in: query
        name: start_date
        required: true
        type: string
      - description: End Date
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseCustomerDataByLocation'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Analyse customer data by store
      tags:
      - Analytics
  /store/api/v1/analytic/full-funnel:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseFullFunnelAnalytic'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Analyse full funnel by store
      tags:
      - Analytics
  /store/api/v1/analytic/loading-time:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      - description: Start Date
        in: query
        name: start_date
        required: true
        type: string
      - description: End Date
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponsePageLoadingTime'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Analyse page loading time by store
      tags:
      - Analytics
  /store/api/v1/analytic/order-trend:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      - description: Start Date
        in: query
        name: start_date
        required: true
        type: string
      - description: End Date
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseOrderTrendAnalytic'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Analyse order trend by store
      tags:
      - Analytics
  /store/api/v1/analytic/product-view:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseProductViewAnalytic'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Analyse product views by store
      tags:
      - Analytics
  /store/api/v1/analytic/repeat-rate:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseRepeatCustomerRate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Analyse repeat customer rate by store
      tags:
      - Analytics
  /store/api/v1/analytic/sales-report:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseSalesReport'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Analyse sales reports by store
      tags:
      - Analytics
  /store/api/v1/analytic/sales/aov:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseSalesAOV'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Show average order value(AOV)
      tags:
      - Sales Performance Metrics
  /store/api/v1/analytic/sales/category:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseSalesByCategory'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Show sales by category
      tags:
      - Sales Performance Metrics
  /store/api/v1/analytic/sales/clv:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseSalesCLV'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Show customer lifetime value(CLV)
      tags:
      - Sales Performance Metrics
  /store/api/v1/analytic/sales/product:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseSalesByProduct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Show sales by product
      tags:
      - Sales Performance Metrics
  /store/api/v1/analytic/sales/revenue:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseSalesRevenue'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Show Revenue
      tags:
      - Sales Performance Metrics
  /store/api/v1/analytic/satisfaction:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      - description: Start Date
        in: query
        name: start_date
        required: true
        type: string
      - description: End Date
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseCustomerSatisfaction'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Analyse customer customer satisfaction by store
      tags:
      - Analytics
  /store/api/v1/analytic/stock-level:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseStockLevelAnalytic'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Read stock levels by store
      tags:
      - Analytics
  /store/api/v1/analytic/top-selling:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      - description: Start Date
        in: query
        name: start_date
        required: true
        type: string
      - description: End Date
        in: query
        name: end_date
        required: true
        type: string
      - description: Count
        in: query
        name: count
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseTopSellingProduct'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Analyse customer churn rate by store
      tags:
      - Analytics
  /store/api/v1/analytic/visitor:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      - description: Start Date
        in: query
        name: start_date
        required: true
        type: string
      - description: End Date
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseVisitorAnalytic'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Analyse vistors by store
      tags:
      - Analytics
  /store/api/v1/cart:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Customer ID
        in: query
        name: customer_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Data'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete all items in cart
      tags:
      - Shopping Cart
    get:
      consumes:
      - application/json
      parameters:
      - description: Customer ID
        in: query
        name: customer_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseCart'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Read cart
      tags:
      - Shopping Cart
    post:
      consumes:
      - application/json
      parameters:
      - description: Customer ID
        in: query
        name: customer_id
        required: true
        type: integer
      - description: Product ID
        in: query
        name: product_id
        required: true
        type: integer
      - description: Quantity
        in: query
        name: quantity
        required: true
        type: string
      - description: Variation Info
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestCart'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.ResponseCart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Add cart
      tags:
      - Shopping Cart
  /store/api/v1/cart/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Cart ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseCart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete cart item by ID
      tags:
      - Shopping Cart
    put:
      consumes:
      - application/json
      parameters:
      - description: Cart ID
        in: path
        name: id
        required: true
        type: integer
      - description: Quantity
        in: query
        name: quantity
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseCart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit cart
      tags:
      - Shopping Cart
  /store/api/v1/cart/count:
    get:
      consumes:
      - application/json
      parameters:
      - description: Customer ID
        in: query
        name: customer_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseCart'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Read item count
      tags:
      - Shopping Cart
  /store/api/v1/category:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseStoreCategory'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Read Category
      tags:
      - Category
    post:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      - description: Category
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestCategory'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/responses.ResponseStoreCategory'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Add Category
      tags:
      - Category
  /store/api/v1/category/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseStoreCategory'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete Category
      tags:
      - Category
    put:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      - description: Parent ID
        in: query
        name: parent_id
        type: integer
      - description: Name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseStoreCategory'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit Category
      tags:
      - Category
  /store/api/v1/customer/address:
    get:
      consumes:
      - application/json
      parameters:
      - description: Customer ID
        in: query
        name: customer_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseCustomerAddress'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Read address to customer
      tags:
      - Customer
    post:
      consumes:
      - application/json
      parameters:
      - description: Customer ID
        in: query
        name: customer_id
        required: true
        type: integer
      - description: Customer Address
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestCustomerAddress'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/responses.ResponseCustomerAddress'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Add address to customer
      tags:
      - Customer
  /store/api/v1/customer/address/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Address ID
        in: path
        name: id
        required: true
        type: integer
      - description: Customer Address
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestCustomerAddress'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseCustomerAddress'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Update address to customer
      tags:
      - Customer
  /store/api/v1/inventory/backorder/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseStore'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Enable or disable back order
      tags:
      - Inventory Manangement
  /store/api/v1/inventory/out-of-stock/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseStore'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Show or hide out of stock
      tags:
      - Inventory Manangement
  /store/api/v1/inventory/stock-level/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseStore'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Show or hide stock level
      tags:
      - Inventory Manangement
  /store/api/v1/order:
    post:
      consumes:
      - application/json
      parameters:
      - description: Customer ID
        in: query
        name: customer_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.ResponseCustomerOrderWithDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Add order
      tags:
      - Order Management
  /store/api/v1/order/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseCustomerOrderWithDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Read orders by ID
      tags:
      - Order Management
  /store/api/v1/order/billing-address/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: Address ID
        in: query
        name: address_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseCustomerOrderWithDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit order billing address
      tags:
      - Order Management
  /store/api/v1/order/customer:
    get:
      consumes:
      - application/json
      parameters:
      - description: Customer ID
        in: query
        name: customer_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseCustomerOrderWithDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Read orders by Customer
      tags:
      - Order Management
  /store/api/v1/order/email-template:
    post:
      consumes:
      - application/json
      parameters:
      - description: Email Template Data
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestEmailTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseEmailTemplate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Read Email Templates By Store ID
      tags:
      - Order Management
  /store/api/v1/order/email-template/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Email Template ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseEmailTemplate'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete Email Template
      tags:
      - Order Management
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseEmailTemplate'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Read Email Templates By Store ID
      tags:
      - Order Management
    put:
      consumes:
      - application/json
      parameters:
      - description: Email Template ID
        in: path
        name: id
        required: true
        type: integer
      - description: Email Template Data
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestEmailTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseEmailTemplate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Update Email Template
      tags:
      - Order Management
  /store/api/v1/order/shipping-address/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: Address ID
        in: query
        name: address_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseCustomerOrderWithDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit order shipping address
      tags:
      - Order Management
  /store/api/v1/order/status/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      - description: Status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseStoreOrder'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit order status
      tags:
      - Order Management
  /store/api/v1/order/store:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseStoreOrder'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Read orders by Store
      tags:
      - Order Management
  /store/api/v1/product:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        type: integer
      - description: Keyword
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseProduct'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Read all products
      tags:
      - Product Management
    post:
      consumes:
      - application/json
      parameters:
      - description: Product Info
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestProductWithDetail'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.ResponseProductWithDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Add product
      tags:
      - Product Management
  /store/api/v1/product/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Data'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete product
      tags:
      - Product Management
    get:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseProductWithDetail'
      security:
      - ApiKeyAuth: []
      summary: Read product by ID
      tags:
      - Product Management
    put:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product Info
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseProduct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit product
      tags:
      - Product Management
  /store/api/v1/product/approve/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseProduct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Approve product
      tags:
      - Product Management (Moderation)
  /store/api/v1/product/attribute-value/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Attribute Value ID
        in: query
        name: attribute_value_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseProductAttributeValue'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete attribute value
      tags:
      - Product Management (Attribute)
    post:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Attribute ID
        in: path
        name: attribute_id
        required: true
        type: integer
      - description: Attribute Value
        in: query
        name: value
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseProductAttributeValue'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Add attribute value
      tags:
      - Product Management (Attribute)
    put:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Attribute Value ID
        in: query
        name: attribute_value_id
        required: true
        type: integer
      - description: Attribute Value
        in: query
        name: value
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseProductAttributeValue'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit attribute value
      tags:
      - Product Management (Attribute)
  /store/api/v1/product/attribute/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Attribute ID
        in: query
        name: attribute_id
        required: true
        type: integer
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Data'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete attributes
      tags:
      - Product Management (Attribute)
    post:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Attributes
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestAttribute'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/responses.ResponseProductAttribute'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Add attributes
      tags:
      - Product Management (Attribute)
    put:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Attribute ID
        in: query
        name: attribute_id
        required: true
        type: integer
      - description: Attributes
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestAttribute'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseProductAttribute'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit attributes
      tags:
      - Product Management (Attribute)
  /store/api/v1/product/category/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product Info
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestProductCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseCategory'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit categories of product
      tags:
      - Product Management
  /store/api/v1/product/channel/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product Channel Info
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestProductChannel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseProductChannel'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit related channels
      tags:
      - Product Management
  /store/api/v1/product/content/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product Content Info
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestProductContent'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseProductContent'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit related contents
      tags:
      - Product Management
  /store/api/v1/product/linked:
    get:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: query
        name: product_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseLinkedProducts'
      security:
      - ApiKeyAuth: []
      summary: Read linked products
      tags:
      - Product Management
    post:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: query
        name: product_id
        required: true
        type: integer
      - description: Linked product ID
        in: query
        name: link_id
        required: true
        type: integer
      - description: Is Up-Sell or Cross-Sell
        in: query
        name: is_up_cross
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.ResponseLinkedProducts'
      security:
      - ApiKeyAuth: []
      summary: Create linked product
      tags:
      - Product Management
  /store/api/v1/product/linked/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        type: integer
      - description: Product ID
        in: query
        name: product_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseLinkedProducts'
      security:
      - ApiKeyAuth: []
      summary: Delete linked product
      tags:
      - Product Management
  /store/api/v1/product/min-stock-level/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Minimum Stock Level
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestMinimumStockLevel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseProduct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Set minimum stock level of product
      tags:
      - Product Management
  /store/api/v1/product/paging:
    get:
      consumes:
      - application/json
      parameters:
      - default: 0
        description: Page
        in: query
        name: page
        required: true
        type: integer
      - default: 100
        description: Count
        in: query
        name: count
        required: true
        type: integer
      - description: Store ID
        in: query
        name: store_id
        type: integer
      - description: Keyword
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseProductsPaging'
      security:
      - ApiKeyAuth: []
      summary: Read products by pagination
      tags:
      - Product Management
  /store/api/v1/product/publish/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseProduct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Publish product
      tags:
      - Product Management (Moderation)
  /store/api/v1/product/reject/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseProduct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Reject product
      tags:
      - Product Management (Moderation)
  /store/api/v1/product/shipping/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Review
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestShippingData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Data'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete shipping data
      tags:
      - Product Management
    post:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Shipping Data
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestShippingData'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.ResponseShippingData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Add shipping data
      tags:
      - Product Management
    put:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Review
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestShippingData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseShippingData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit shipping data
      tags:
      - Product Management
  /store/api/v1/product/tag/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Tags
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestTag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseTag'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Edit tags
      tags:
      - Product Management
  /store/api/v1/review:
    post:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: query
        name: product_id
        required: true
        type: integer
      - description: Customer ID
        in: query
        name: customer_id
        required: true
        type: integer
      - description: Review Info
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestProductReview'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.ResponseProductReview'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Create product review
      tags:
      - Product Review
  /store/api/v1/review/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseProductReview'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Read all product reviews
      tags:
      - Product Review
  /store/api/v1/review/moderate/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Product Review ID
        in: path
        name: id
        required: true
        type: integer
      - default: Approved
        description: Status
        in: query
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseProductReview'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Moderate product review
      tags:
      - Product Review
  /store/api/v1/review/publish/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseProductReview'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Moderate product review
      tags:
      - Product Review
  /store/api/v1/shipping/order:
    put:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: query
        name: order_id
        required: true
        type: integer
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      - description: Shipping Method
        in: query
        name: method
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Data'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Update shipping method of order
      tags:
      - Shipping Options
  /store/api/v1/shipping/store:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseShippingMethod'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Read shipping method of store
      tags:
      - Shipping Options
    post:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      - description: Shipping Option
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestShippingOption'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.ResponseShippingMethod'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Add shipping method to store
      tags:
      - Shipping Options
  /store/api/v1/store:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseStore'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Read store
      tags:
      - Store Management
    post:
      consumes:
      - application/json
      parameters:
      - description: Store Info
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestStore'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.ResponseStore'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Create store
      tags:
      - Store Management
  /store/api/v1/store/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseStore'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete store
      tags:
      - Store Management
    put:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: integer
      - description: Store Info
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestStore'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseStore'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Update store
      tags:
      - Store Management
  /store/api/v1/tax:
    get:
      consumes:
      - application/json
      parameters:
      - description: Customer ID
        in: query
        name: customer_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseTaxSetting'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: View tax rates
      tags:
      - Tax Settings
  /store/api/v1/upload/csv:
    post:
      consumes:
      - multipart/form-data
      description: Upload a CSV file to the server
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      - description: CSV file to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: File uploaded successfully
          schema:
            type: string
      summary: Upload a CSV file
      tags:
      - CSV Upload
  /store/api/v1/variation:
    post:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: query
        name: product_id
        required: true
        type: integer
      - description: Variation Info
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestProductVariation'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.ResponseProductVariation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Create product variation
      tags:
      - Product Variation
  /store/api/v1/variation/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Variation ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Data'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete product variation by ID
      tags:
      - Product Variation
    put:
      consumes:
      - application/json
      parameters:
      - description: Variation ID
        in: path
        name: id
        required: true
        type: integer
      - description: Variation Info
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestProductVariation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseProductVariation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Update product variation
      tags:
      - Product Variation
  /store/api/v1/variation/product:
    get:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: query
        name: product_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ResponseProductVariationsInProduct'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Read all product variation in product
      tags:
      - Product Variation
  /store/api/v1/variation/stock-level/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Variation ID
        in: path
        name: id
        required: true
        type: integer
      - description: Stock Level
        in: query
        name: stock_level
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseProductVariation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Update product variation stock level
      tags:
      - Product Variation
  /store/api/v1/variation/store:
    get:
      consumes:
      - application/json
      parameters:
      - description: Store ID
        in: query
        name: store_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseProductVariationsInStore'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Read all product variation in store
      tags:
      - Product Variation
  /store/api/v1/visit:
    post:
      consumes:
      - application/json
      parameters:
      - description: Vistor
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/requests.RequestVisitor'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.ResponseVisitor'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - ApiKeyAuth: []
      summary: Create visitor
      tags:
      - Visitor
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
